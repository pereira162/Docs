[
  {
    "index": 0,
    "text": "hello everyone this is episode 13 of our\none bedroom house\nand uh today what we're gonna do is to\nadd some columns\nto our building all right but before we\nget into that i want to say thank you to\nall my\nvisionaries who have been supporting the\nchannel so far\num you know big open self respect and if\nit's your first time on the channel\nthank you for joining if you like what\nyou see here\nor if you learned something you know\nwhat hit the like button and also don't\nforget to subscribe\nand comment and",
    "start_char": 0,
    "end_char": 500,
    "char_count": 500,
    "word_count": 100,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 1,
    "text": "arned something you know\nwhat hit the like button and also don't\nforget to subscribe\nand comment and everything also follow\nme on my other social media platforms\ninstagram twitter those are the only two\ni have right now\nand uh yeah let's jump on the other side\nlet's go\n[Music]\nall right so you know how it goes over\nhere classroom style\nthe first question the teacher is going\nto ask you is what\nis a column anybody here know what is a\ncolumn raise your hand for me\nyou know what let's turn to googl",
    "start_char": 400,
    "end_char": 900,
    "char_count": 500,
    "word_count": 97,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 2,
    "text": "a column anybody here know what is a\ncolumn raise your hand for me\nyou know what let's turn to google i ask\ngoogle what\nis a column an upright pillar\ntypically cylindrical and made of stone\nor concrete\nsupporting an entablature arch or other\nstructure or standing alone as a\nmonument\nwhat google is basically telling us is\nthat a column is not\nonly here for pretty looks if you know\nwhat i'm saying columns are often\nload bearing which simply mean that they\nare holding up\nsomething whether it be the",
    "start_char": 800,
    "end_char": 1300,
    "char_count": 500,
    "word_count": 93,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 3,
    "text": "olumns are often\nload bearing which simply mean that they\nare holding up\nsomething whether it be the roof a beam\nan\narch something most times or sometimes\nthem have it by itself standing up in\nthe middle of nowhere\njust for pretty looks so columns also\ncome in various shape\nsize and are made from concrete stone\nsteel and even wood most of the columns\nthat are made from\nwood we typically call those a post\nbut the their function is similar to a\ncolumn because they are\nholding up something as well",
    "start_char": 1200,
    "end_char": 1700,
    "char_count": 499,
    "word_count": 94,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 4,
    "text": "a post\nbut the their function is similar to a\ncolumn because they are\nholding up something as well so we just\nput them in another class there and\nwe'll say yeah what hold on a column so\ni want to see it right listen somebody\nsaid all right okay so before we get\ninto the specific columns that we're\ngoing to use\non this building it is important to note\nthat the shape\nsize and the material that is used to\nmake these columns are usually\ndetermined by\nan engineer all right someone who\nunderstands\nho",
    "start_char": 1600,
    "end_char": 2100,
    "char_count": 499,
    "word_count": 97,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 5,
    "text": "sed to\nmake these columns are usually\ndetermined by\nan engineer all right someone who\nunderstands\nhow load works um how to do calculations\nand make sure that you're using the\nright steel the right\nmix of concrete you know to determine if\nthe size of the column\nis big enough or wide enough to hold up\na certain amount of\nload or weight so these can be very uh\ntricky if you don't understand what\nyou're doing but for this building\nand most buildings that we do in jamaica\num we have a standard column",
    "start_char": 2000,
    "end_char": 2500,
    "char_count": 500,
    "word_count": 96,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 6,
    "text": "re doing but for this building\nand most buildings that we do in jamaica\num we have a standard column\ntype that we use which i'm going to get\ninto in a moment\nand this is just a typical example all\nright so if you're going to do a much\nlarger building and so on\nthen you would need to do some more\nresearch and find out\nexactly the type of column and beam\nalso that would be needed for your\nparticular project\nall right so of course the columns that\nwe're using will be made\nfrom concrete they will be",
    "start_char": 2400,
    "end_char": 2900,
    "char_count": 500,
    "word_count": 101,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 7,
    "text": "project\nall right so of course the columns that\nwe're using will be made\nfrom concrete they will be reinforced\nwith\nsteel or rebar and so they\nlook like these these are special shaped\ncolumns\num that we in jamaica call stiffeners\nright so as you can see we have various\nshapes and\nof course they are not limited to these\nonly depends on how\nthe walls connect all right so of course\nin our drawing we will only need to use\nthese three top ones that you're seeing\nhere so the standard\nt stiffener we h",
    "start_char": 2800,
    "end_char": 3300,
    "char_count": 499,
    "word_count": 97,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 8,
    "text": "will only need to use\nthese three top ones that you're seeing\nhere so the standard\nt stiffener we have the eye stiffener\nand we also have the l\nstiffener and by just looking at it you\ncan basically determine where\non the building you would place these\nbased on the shape\nof the column so of course the t would\ngo somewhere where the wall\nmeets another wall like that at a\njunction\nand then the eye would go on a straight\nwall so if you have a wall that is very\nlong\nor if you have a wall that stops",
    "start_char": 3200,
    "end_char": 3700,
    "char_count": 498,
    "word_count": 102,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 9,
    "text": "ould go on a straight\nwall so if you have a wall that is very\nlong\nor if you have a wall that stops in the\nmiddle of a room\nor something you want to use the eye\nstiffener and also if you have the\ncorner of the building we want to use\nthe\nl stiffness and in other cases we would\nuse\na cross shaped stiffener or a y shape or\na 45 degree\nangle stiffener all right so you can go\nahead and download this pdf\nin the description below because you're\ngoing to need it all right as you can\nsee we have the dim",
    "start_char": 3600,
    "end_char": 4100,
    "char_count": 500,
    "word_count": 108,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 10,
    "text": "df\nin the description below because you're\ngoing to need it all right as you can\nsee we have the dimensions on here\nfor this particular project and as you\ncan see each leg of\nthe stiffener has the width of the wall\nso this one is six inches this one is\nalso six and this one over here would be\nthe same\nas well likewise we have one that is six\nby twelve\nand we also have another one so if your\nwall is going to be\neight inches you gonna make sure that uh\nthe thickness of your stiffener is also\neight",
    "start_char": 4000,
    "end_char": 4500,
    "char_count": 500,
    "word_count": 104,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 11,
    "text": "s going to be\neight inches you gonna make sure that uh\nthe thickness of your stiffener is also\neight\ninches all right so that is that let's\nmove\nover into autocad and we get the thing\nrolling\nso the first thing you want to do if you\nnotice here kind of go ahead with\nthings so that i can move a little\nfaster so go ahead and create\na construct and call it structural\nbecause really actually columns and\nbeams would be placed\nin this drawing we're not going to model\nthe beams\nhere we could do everyth",
    "start_char": 4400,
    "end_char": 4900,
    "char_count": 500,
    "word_count": 99,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 12,
    "text": "nd\nbeams would be placed\nin this drawing we're not going to model\nthe beams\nhere we could do everything here in 3d\nbut we're going to do them in\n2d just to make things easier and also\nreally and truly we don't need 3d for\nthis drawing especially due to the fact\nthat\nthese columns are basically hidden\nwithin the walls you won't be seeing\nthem popping out of the wall so\nwe don't necessarily need to put them in\n3d all right even for this\none in the corner here we already have a\ncolumn looking\nthing",
    "start_char": 4800,
    "end_char": 5300,
    "char_count": 500,
    "word_count": 99,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 13,
    "text": "put them in\n3d all right even for this\none in the corner here we already have a\ncolumn looking\nthing there if i should put the drawing\nin 3d you can see that we have\nsomething that looks like a column\nalready so we don't need to\nmodel anything at all here in 3d\nso go ahead create a construct and we're\ngoing to call it\nstructural as you can see i have it open\nup already\nand then you're going to minimize that\nno before you minimize go ahead and\nx-ref overlay the ground floor\ninto your structural m",
    "start_char": 5200,
    "end_char": 5700,
    "char_count": 500,
    "word_count": 101,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 14,
    "text": "imize that\nno before you minimize go ahead and\nx-ref overlay the ground floor\ninto your structural model arm\nstructural drawing\nso that's what i have done here so far\nand then you're going to go ahead\nand draw the shape of\nyour stiffeners so if you notice i have\none that i didn't do\nwhich is the t-shape one so i'm going to\nshow you how to go about doing that\nbut i already have uh three\nalready made and these are actually\nsmart\nas you can see they have a pull point\nand they also have a rotation\nu",
    "start_char": 5600,
    "end_char": 6100,
    "char_count": 500,
    "word_count": 101,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 15,
    "text": "e and these are actually\nsmart\nas you can see they have a pull point\nand they also have a rotation\nuh ability so the one that i'm gonna\ncreate i'm gonna show you how i go about\ndoing that so let's go ahead\nand you would want to look on the pdf to\nmake sure that you're following\nuh the dimension and the sizing\naccurately\nall right so we're going to turn on our\nauthor mode and we're going to go ahead\nand just draw\nthe t stiffness so six six\nsix it's all six all the way\nalmost like the mark of the",
    "start_char": 6000,
    "end_char": 6500,
    "char_count": 499,
    "word_count": 105,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 16,
    "text": "d\nand just draw\nthe t stiffness so six six\nsix it's all six all the way\nalmost like the mark of the beast circle\nand sees\ntrample the beast all right so there we\ngo\nso this is our thing and then we're\ngoing to just type the command the join\nwe're going to join everything together\nhit enter and we're going to then hatch\nusing the concrete uh\nhatch which is this make sure that it is\nsaying\none do that\nhit enter so now we have a hatching and\nwe also have\nthe shape of the thing all right at this\npoi",
    "start_char": 6400,
    "end_char": 6900,
    "char_count": 500,
    "word_count": 105,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 17,
    "text": "at\nhit enter so now we have a hatching and\nwe also have\nthe shape of the thing all right at this\npoint we're gonna\nturn all of this into a block so we're\ngonna type\nthe command well let's select everything\nfirst\nand then type the command block\nso what we're doing here is to as you\ncan see that little display there is to\nturn\nthis object into a block now if you look\ndown here you can see that i have\nthose three made and they are named\ninside of here so we're going to name\nthis one the\nstandard t",
    "start_char": 6800,
    "end_char": 7300,
    "char_count": 499,
    "word_count": 104,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 18,
    "text": "e\nthose three made and they are named\ninside of here so we're going to name\nthis one the\nstandard t\nstiffener and we're going to hit\noh okay we're going to say open in block\neditor because we want to\nmake it smart so we're gonna say okay\nall right so now that we're in the\neditor this is where we can make it\ninto something that we can rotate and\nand those kind of thing so the first\nthing we're gonna do is to go up to\nparameter and we're gonna add\na point all right we're going to add two\npoints we",
    "start_char": 7200,
    "end_char": 7700,
    "char_count": 500,
    "word_count": 105,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 19,
    "text": "a do is to go up to\nparameter and we're gonna add\na point all right we're going to add two\npoints we want to be able to grab the\nobject from this corner and this corner\nso let's do that\ngrab i'm going to put one point here i'm\ngoing to put another point here\nlet's drag these out these are just\nlabels to identify where\nyour stuff is as you can see the blue\nmarker here\nis where the actual thing is at and we\nalso want to be able to rotate\nthis block so we're gonna click on\nrotate we want to rotate",
    "start_char": 7600,
    "end_char": 8100,
    "char_count": 499,
    "word_count": 106,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 20,
    "text": "t and we\nalso want to be able to rotate\nthis block so we're gonna click on\nrotate we want to rotate it from these\ntwo points as well\nso we're going to place the first one\nright here we're going to drag this out\nlike so\nand type it and the angle that we want\nwould be 180 degrees\nand then we're going to also type 8 once\nmore\nso as you can see we have our rotation\nhandle\nright there we want to place another one\nover here so we're going to click on\nrotation again and we're going to click\nin this cor",
    "start_char": 8000,
    "end_char": 8500,
    "char_count": 500,
    "word_count": 106,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 21,
    "text": "another one\nover here so we're going to click on\nrotation again and we're going to click\nin this corner\ndrag this out and type it\nand our angle would be zero\nenter and just like that we now have\nour two rotational uh handles so\nnow guess what we need to make them into\nactions because even though we place the\nparameters\nthey are not active so what we're going\nto do is to do the\nthe move handles first so let's click on\nmove it says here select the parameter\nso we want to do this one first\nso we're",
    "start_char": 8400,
    "end_char": 8900,
    "char_count": 500,
    "word_count": 102,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 22,
    "text": "st so let's click on\nmove it says here select the parameter\nso we want to do this one first\nso we're going to select that and then\nit is now asking you what do you want to\nrotate\nwe want to rotate everything\nhit enter actually it's not rotate it's\nmove\nlet's do this the second one select the\nparameter\nwhat do you want to move everything\nenter we're going to do the same thing\nfor rotate\nso click on rotate we're going to do\nthis rotation parameter\nfirst so we click on the parameter now\nwe need to",
    "start_char": 8800,
    "end_char": 9300,
    "char_count": 499,
    "word_count": 100,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 23,
    "text": "rotate we're going to do\nthis rotation parameter\nfirst so we click on the parameter now\nwe need to select\neverything that we want to rotate which\nwould be\neverything hold on let me\nlet me let me zoom out\neverything enter i'm going to do the\nnext one\nrotate we're going to select this one\nwhat do you want to rotate everything\nenter\nand that's it we hit close we hit\nsave and just like that\nwe have a block that can be moved around\nwith these handles let me turn this off\nso we can move it around and",
    "start_char": 9200,
    "end_char": 9700,
    "char_count": 499,
    "word_count": 101,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 24,
    "text": "block that can be moved around\nwith these handles let me turn this off\nso we can move it around and we can also\nrotate it\nusing any of these handles all right so\njust like that you want to make sure\nthat you save\nbecause that's a lot of work and also go\nahead and create\na layer for these columns so i've\nalready created one here\ncalled s calls and i made it green\nand also at a line weight of 0.5\nmm so go ahead and create that layer and\nwhat we're going to do is to place all\nof these\non that laye",
    "start_char": 9600,
    "end_char": 10100,
    "char_count": 499,
    "word_count": 107,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 25,
    "text": "m so go ahead and create that layer and\nwhat we're going to do is to place all\nof these\non that layer so everything looks\nthe way it ought all right so usually\nwhat i would do now is to start copying\nthese\nover so we're going to hit the copy tool\ni usually do this one first because this\none kind of fit in all of the corners of\nthe hose\nall right so i'm going to place that one\nthere i'm going to place one here\ni'm going to place one here and i'm\ngoing to place one here\nand then i'm going to place",
    "start_char": 10000,
    "end_char": 10500,
    "char_count": 500,
    "word_count": 108,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 26,
    "text": "ace one here\ni'm going to place one here and i'm\ngoing to place one here\nand then i'm going to place one here and\nof course you're going to go ahead and\nrotate them now\ninto the orientation if you notice this\nis not good\nso we need to turn on author so that we\ncan make them\nuh perfectly straight\nyou don't want to rotate it and it\nshould be what 90 90 degree rotation and\nwhen you check it\n89.7 and that kind of thing that's\nthat's miss that's that that wouldn't be\ngood\nall right you want your thin",
    "start_char": 10400,
    "end_char": 10900,
    "char_count": 500,
    "word_count": 103,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 27,
    "text": "that kind of thing that's\nthat's miss that's that that wouldn't be\ngood\nall right you want your thing to be as\naccurate as possible\nso go ahead and click on those rotation\nhandle and\njust rotate your thing\nso far we have all four or five corners\ntaken care of\ni'm gonna add a t maybe right there and\nanother t\nover here so let's go ahead and do that\nand you could actually rotate it from\nhere before you\ncopy it so that that so that way you can\njust you know\nmove it over let me turn this off for\nnow",
    "start_char": 10800,
    "end_char": 11300,
    "char_count": 500,
    "word_count": 104,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 28,
    "text": "you\ncopy it so that that so that way you can\njust you know\nmove it over let me turn this off for\nnow\ni'm gonna drop that one right there\ni'm gonna need this one right here as\nwell turn\nmy author mode on before\ni rotate okay obviously that was placed\nin the wrong spot\nso let's just drag it up like so\nall right so we have two t stiffeners i\ndon't think we need any more than that\ni'm gonna be placing a couple of um\neye stiffeners so this one i'm gonna\ncopy\nand i'm gonna drop this one\nright here and",
    "start_char": 11200,
    "end_char": 11700,
    "char_count": 500,
    "word_count": 107,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  },
  {
    "index": 29,
    "text": "a couple of um\neye stiffeners so this one i'm gonna\ncopy\nand i'm gonna drop this one\nright here and so i can\nrotate this one like so\nright in that spot so i would have a\nbeam running over this\ninto that and then i would have a beam\nrunning from this\ninto that beam over here\ni feel like i needed to have another t\nstiffener right here\ni don't think you need it but i'm just\ngonna put it there right\nso we have this beam running into that\nand then this beam\nrunning to this wall down here so what\ni'l",
    "start_char": 11600,
    "end_char": 12100,
    "char_count": 499,
    "word_count": 106,
    "metadata": {
      "chunk_size": 500,
      "overlap": 100
    }
  }
]